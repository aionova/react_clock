{"version":3,"sources":["components/Clock/Clock.js","App.js","index.js"],"names":["Clock","state","time","Date","toLocaleTimeString","setInterval","setState","console","log","className","this","props","name","isClockVisible","React","Component","App","toggleVisible","changeName","prevState","newName","randomize","Math","floor","random","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAsCeA,E,4MAlCbC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sB,kEAGE,IAAD,OAClBC,aAAY,WACV,EAAKC,SAAS,CACZJ,MAAO,IAAIC,MAAQC,uBAGrBG,QAAQC,KAAI,IAAIL,MAAOC,wBACtB,O,+BAIH,OACE,yBAAKK,UAAU,SACb,kDACkBC,KAAKC,MAAMC,OAE7B,2BACGF,KAAKC,MAAME,eAAX,mCACCH,KAAKT,MAAMC,MAAS,2B,GAvBZY,IAAMC,WCqDXC,G,kNAnDbf,MAAQ,CACNY,gBAAgB,EAChBD,KAAM,G,EAGRK,cAAgB,WACd,EAAKX,UAAS,SAAAL,GAAK,MAAK,CACtBY,gBAAiBZ,EAAMY,oB,EAI3BK,WAAa,kBACX,EAAKZ,UAAS,SAACa,GACb,IAAMC,EAAU,EAAKC,YAKrB,OAFAd,QAAQC,IAAR,qCAA0CW,EAAUP,KAApD,eAA+DQ,IAExD,CACLR,KAAMQ,O,EAKZC,UAAY,kBAAMC,KAAKC,MAAsB,IAAhBD,KAAKE,W,uDAExB,IAAD,EAC0Bd,KAAKT,MAA9BY,EADD,EACCA,eAAgBD,EADjB,EACiBA,KAExB,OACE,yBAAKH,UAAU,OACb,kBAAC,EAAD,CAAOG,KAAMA,EAAMC,eAAgBA,IACnC,4BACEJ,UAAU,cACVgB,KAAK,SACLC,QAAShB,KAAKO,eAEbJ,EAAiB,cAAgB,cAEpC,4BACEJ,UAAU,cACVgB,KAAK,SACLC,QAAShB,KAAKQ,YAHhB,oB,GAxCUJ,IAAMC,YCAxBY,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.47a9a214.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Clock extends React.Component {\n  state = {\n    time: new Date().toLocaleTimeString(),\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.setState({\n        time: (new Date()).toLocaleTimeString(),\n      });\n      // eslint-disable-next-line no-console\n      console.log(new Date().toLocaleTimeString());\n    }, 1000);\n  }\n\n  render() {\n    return (\n      <div className=\"clock\">\n        <h1>\n          {`Clock named ${this.props.name}`}\n        </h1>\n        <p>\n          {this.props.isClockVisible ? `Current time:\n          ${this.state.time}` : 'No clock available'}\n        </p>\n      </div>\n    );\n  }\n}\n\nClock.propTypes = {\n  isClockVisible: PropTypes.bool.isRequired,\n  name: PropTypes.number.isRequired,\n};\n\nexport default Clock;\n","import React from 'react';\nimport Clock from './components/Clock/Clock';\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    name: 0,\n  };\n\n  toggleVisible = () => {\n    this.setState(state => ({\n      isClockVisible: !state.isClockVisible,\n    }));\n  };\n\n  changeName = () => (\n    this.setState((prevState) => {\n      const newName = this.randomize();\n\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${prevState.name} to ${newName}`);\n\n      return {\n        name: newName,\n      };\n    })\n  );\n\n  randomize = () => Math.floor(Math.random() * 1000);\n\n  render() {\n    const { isClockVisible, name } = this.state;\n\n    return (\n      <div className=\"app\">\n        <Clock name={name} isClockVisible={isClockVisible} />\n        <button\n          className=\"app__button\"\n          type=\"button\"\n          onClick={this.toggleVisible}\n        >\n          {isClockVisible ? 'Hide  clock' : 'Show clock'}\n        </button>\n        <button\n          className=\"app__button\"\n          type=\"button\"\n          onClick={this.changeName}\n        >\n          Change name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}