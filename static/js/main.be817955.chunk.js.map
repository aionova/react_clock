{"version":3,"sources":["components/Clock/Clock.js","App.js","index.js"],"names":["Clock","state","time","Date","toLocaleTimeString","isClockVisible","name","toggleVisible","setState","changeName","prevState","newName","randomize","console","log","Math","floor","random","setInterval","this","className","type","onClick","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"4NAwEeA,G,kNApEbC,MAAQ,CACNC,MAAO,IAAIC,MAAQC,qBACnBC,gBAAgB,EAChBC,KAAM,c,EAaRC,cAAgB,WACd,EAAKC,UAAS,SAAAP,GAAK,MAAK,CACtBI,gBAAiBJ,EAAMI,oB,EAI3BI,WAAa,kBACX,EAAKD,UAAS,SAACE,GACb,IAAMC,EAAU,EAAKC,YAKrB,OAFAC,QAAQC,IAAR,qCAA0CJ,EAAUJ,KAApD,eAA+DK,IAExD,CACLL,KAAMK,O,EAKZC,UAAY,kBAAMG,KAAKC,MAAsB,IAAhBD,KAAKE,W,kEA7Bb,IAAD,OAClBC,aAAY,WACV,EAAKV,SAAS,CACZN,MAAO,IAAIC,MAAQC,uBAGrBS,QAAQC,KAAI,IAAIX,MAAOC,wBACtB,O,+BAwBK,IAAD,EAC0Be,KAAKlB,MAA9BI,EADD,EACCA,eAAgBC,EADjB,EACiBA,KAExB,OACE,yBAAKc,UAAU,SACb,kDACkBd,IAElB,2BACGD,EAAc,mCACbc,KAAKlB,MAAMC,MAAS,IAExB,4BACEkB,UAAU,oBACVC,KAAK,SACLC,QAASH,KAAKZ,eAEbF,EAAiB,aAAe,cAEnC,4BACEe,UAAU,cACVC,KAAK,SACLC,QAASH,KAAKV,YAHhB,oB,GAzDYc,IAAMC,YCOXC,G,MANH,kBACV,yBAAKL,UAAU,OACb,kBAAC,EAAD,SCFJM,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.be817955.chunk.js","sourcesContent":["import React from 'react';\nimport './Clock.scss';\n\nclass Clock extends React.Component {\n  state = {\n    time: (new Date()).toLocaleTimeString(),\n    isClockVisible: true,\n    name: 'Nice Clock',\n  };\n\n  componentDidMount() {\n    setInterval(() => {\n      this.setState({\n        time: (new Date()).toLocaleTimeString(),\n      });\n      // eslint-disable-next-line no-console\n      console.log(new Date().toLocaleTimeString());\n    }, 1000);\n  }\n\n  toggleVisible = () => {\n    this.setState(state => ({\n      isClockVisible: !state.isClockVisible,\n    }));\n  };\n\n  changeName = () => (\n    this.setState((prevState) => {\n      const newName = this.randomize();\n\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${prevState.name} to ${newName}`);\n\n      return {\n        name: newName,\n      };\n    })\n  );\n\n  randomize = () => Math.floor(Math.random() * 1000);\n\n  render() {\n    const { isClockVisible, name } = this.state;\n\n    return (\n      <div className=\"clock\">\n        <h1>\n          {`Clock named ${name}`}\n        </h1>\n        <p>\n          {isClockVisible ? `Current time:\n          ${this.state.time}` : ''}\n        </p>\n        <button\n          className=\"visibility-button\"\n          type=\"button\"\n          onClick={this.toggleVisible}\n        >\n          {isClockVisible ? 'Hide clock' : 'Show clock'}\n        </button>\n        <button\n          className=\"name-button\"\n          type=\"button\"\n          onClick={this.changeName}\n        >\n          Change name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Clock;\n","import React from 'react';\nimport Clock from './components/Clock/Clock';\nimport './App.scss';\n\nconst App = () => (\n  <div className=\"App\">\n    <Clock />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}